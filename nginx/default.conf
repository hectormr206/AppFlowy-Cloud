# Minimal nginx configuration for AppFlowy-Cloud
# Self Hosted AppFlowy Cloud user should alter this file to suit their needs,
# or use the appflowy.site.conf in external_proxy_config/nginx if they are using
# an external proxy.

# docker dns resolver
resolver 127.0.0.11 valid=10s;
#error_log /var/log/nginx/error.log debug;

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

map $http_origin $cors_origin {
    # AppFlowy Web origin
    "~^http://localhost:3000$" $http_origin;
    default "null";
}

server {
    listen 8080;

    # https://github.com/nginxinc/nginx-prometheus-exporter
    location = /stub_status {
        stub_status;
    }
}


server {
    # ssl_certificate /etc/nginx/ssl/certificate.crt;
    # ssl_certificate_key /etc/nginx/ssl/private_key.key;

    listen 80;
    # listen 443 ssl;
    client_max_body_size 10M;

    underscores_in_headers on;
    set $appflowy_cloud_backend "http://appflowy_cloud:8000";
    set $gotrue_backend "http://gotrue:9999";
    set $admin_frontend_backend "http://admin_frontend:3000";
    set $appflowy_web_backend "http://appflowy_web:80";
    set $minio_backend "http://minio:9001";
    set $minio_api_backend "http://minio:9000";
    # Host name for minio, used internally within docker compose
    set $minio_internal_host "minio:9000";
    set $pgadmin_backend "http://pgadmin:80";

    # GoTrue
    location ~ ^/gotrue(/.*)$ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Max-Age' 3600 always;
            add_header 'Content-Type' 'text/plain charset=UTF-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        proxy_pass $gotrue_backend$1;
        proxy_set_header Host $http_host;
        proxy_pass_request_headers on;
    }

    # WebSocket
    location /ws {
        proxy_pass $appflowy_cloud_backend;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 86400s;
    }

    location /api {
        proxy_pass $appflowy_cloud_backend;
        proxy_set_header X-Request-Id $request_id;
        proxy_set_header Host $http_host;

        # Set CORS headers for other requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept, Client-Version, Device-Id' always;
            add_header 'Access-Control-Max-Age' 3600 always;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept, Client-Version, Device-Id' always;
        add_header 'Access-Control-Max-Age' 3600 always;
    }

    # AppFlowy Web
    location / {
        proxy_pass $appflowy_web_backend;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
